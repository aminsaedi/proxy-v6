name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: go mod download

      - name: Build binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          # Build agent
          go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" \
            -o dist/agent-${{ matrix.suffix }} \
            cmd/agent/main.go
          
          # Build coordinator
          go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" \
            -o dist/coordinator-${{ matrix.suffix }} \
            cmd/coordinator/main.go
          
          # Build monitor
          go build -ldflags="-s -w -X main.Version=${{ github.ref_name }}" \
            -o dist/monitor-${{ matrix.suffix }} \
            cmd/monitor/main.go

      - name: Compress binaries
        run: |
          cd dist
          tar czf proxy-v6-${{ matrix.suffix }}.tar.gz \
            agent-${{ matrix.suffix }} \
            coordinator-${{ matrix.suffix }} \
            monitor-${{ matrix.suffix }}
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: proxy-v6-${{ matrix.suffix }}
          path: dist/proxy-v6-${{ matrix.suffix }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/proxy-v6-*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation

            ### Quick Install Script (Linux/macOS)
            
            ```bash
            # Download and install latest release
            curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
            ```

            ### Manual Installation

            1. Download the appropriate binary for your system
            2. Extract the archive:
               ```bash
               tar xzf proxy-v6-<platform>.tar.gz
               ```
            3. Move binaries to your PATH:
               ```bash
               sudo mv agent-<platform> /usr/local/bin/proxy-v6-agent
               sudo mv coordinator-<platform> /usr/local/bin/proxy-v6-coordinator
               sudo mv monitor-<platform> /usr/local/bin/proxy-v6-monitor
               sudo chmod +x /usr/local/bin/proxy-v6-*
               ```

            ## What's Changed
            See below for full changelog.

  docker:
    name: Build and Push Docker Images
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/proxy-v6
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Agent Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.agent
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/proxy-v6:agent-${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:agent-${{ github.ref_name }}

      - name: Build and push Coordinator Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.coordinator
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/proxy-v6:coordinator-${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:coordinator-${{ github.ref_name }}